name: security_scan

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  DEMO_TARGET: http://testphp.vulnweb.com

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies (with fallback)
        shell: bash
        run: |
          set -e
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f src/requirements.txt ]; then
            pip install -r src/requirements.txt
          else
            echo "No requirements file found, installing minimal deps..."
            pip install requests beautifulsoup4 pytest
          fi

      - name: Run tests (tolerate no tests)
        shell: bash
        run: |
          pytest -q src/tests || {
            code=$?
            if [ "$code" -eq 5 ]; then
              echo "Pytest exit 5 (no tests collected). Continuing...";
              exit 0
            fi
            exit $code
          }

  scan:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies (with fallback)
        shell: bash
        run: |
          set -e
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f src/requirements.txt ]; then
            pip install -r src/requirements.txt
          else
            echo "No requirements file found, installing minimal deps..."
            pip install requests beautifulsoup4
          fi

      - name: Run scanner against demo target
        run: |
          mkdir -p reports
          python src/scanner.py \
            -u "${DEMO_TARGET}" \
            --depth 1 --timeout 180 \
            --export json md csv \
            --output-dir reports

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/*
